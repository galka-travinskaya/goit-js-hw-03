'use strict'

//https://github.com/Venikeee1/group-23/tree/master/lesson-2

/* Mortal combat game */

/*
1) run() - –∑–∞–ø—É—Å–∫–∞–µ—Ç –∏–≥—Ä—É
2) fight() - –∏–≥—Ä–æ–∫–∏ –¥–µ—Ä—É—Ç—Å—è
3) greetWinner() - –ø–æ–ø—Ä–µ–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
4) logPlayersHit() - –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –æ–±–º–µ–Ω —É–¥–∞—Ä–∞–º–∏
*/

const audio = document.querySelector('audio');

const playerFactory = (characterName) => {
  // –º–∞—Å—Å–∏–≤ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –º–æ—Ä—Ç–∞–ª –∫–æ–º–±–∞—Ç–∞
  const mortalCombatCharacters = [
    {
      name: 'Motaro',
      damage: 95,
      health: 500,
      icon: 'üëø',
      missChance: 0.05,
    },
    {
      name: 'Liu Kang',
      damage: 85,
      health: 400,
      icon: 'üë¶',
      missChance: 0.35,
    },
    {
      name: 'Raiden',
      damage: 100,
      health: 550,
      icon: 'üë®‚Äçü¶≥',
      missChance: 0.15,
    },
    {
      name: 'Sindel',
      damage: 90,
      health: 520,
      icon: 'üë©‚Äçü¶≥',
      missChance: 0.25,
    },
    {
      name: 'Subzero',
      damage: 100,
      health: 540,
      icon: 'ü•∂',
      missChance: 0.15,
    },
  ]

  let result;

  for (let character of mortalCombatCharacters) {
    if(character.name === characterName) {
      result = character;
      return result;
    }
  }
  // –±–æ–ª–µ–µ –∫–æ—Ä–æ—Ç–∫–∞—è –∑–∞–ø–∏—Å—å –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –ø–æ –∏–º–µ–Ω–∏
  // return mortalCombatCharacters.find(character => character.name === characterName);
}

const game = {
  firstPlayer: null,
  secondPlayer: null,
  addFirstPlayer(player) {
    this.firstPlayer = player;
  },

  addSecondPlayer(player) {
    this.secondPlayer = player;
  },

  fight() {
    let {
      health: firstPlayerHealth,
      damage: firstPlayerDamage
    } = this.firstPlayer;
    // –∞–Ω–∞–ª–æ–≥
    // let firstPlayerHealth = this.firstPlayer.health;
    // let firstPlayerDamage = this.firstPlayer.damage;

    let { health, damage } = this.firstPlayer;
    // –∞–Ω–∞–ª–æ–≥
    // let health = this.firstPlayer.health;
    // let damage = this.firstPlayer.damage;

    let {
      health: secondPlayerHealth,
      damage: secondPlayerDamage
    } = this.secondPlayer;

    while(firstPlayerHealth > 0 && secondPlayerHealth > 0) {
      firstPlayerHealth = firstPlayerHealth - secondPlayerDamage;
      secondPlayerHealth = secondPlayerHealth - firstPlayerDamage;

      this.logPlayersHit({
        damage: firstPlayerDamage,
        health: secondPlayerHealth,
        icon: this.firstPlayer.icon,
        name: this.firstPlayer.name
      })

      this.logPlayersHit({
        damage: secondPlayerDamage,
        health: firstPlayerHealth,
        icon: this.secondPlayer.icon,
        name: this.secondPlayer.name
      })

      if(firstPlayerHealth <= 0) {
        this.greetWinner(this.secondPlayer);
      }

      if(secondPlayerHealth <= 0) {
        this.greetWinner(this.firstPlayer);
      }
    }
  },

  greetWinner(player) {
    const { icon, name} = player;
    console.log(`üéàüéàüéàüéàüéàüéàüéàüéàüéàüéàüéàüéàüéàüéàüéàüéà`);
    console.log(`‚≠êüéàüèÜ  ${icon} ${name} wins  üèÜüéà‚≠ê`);
    console.log(`üéàüéàüéàüéàüéàüéàüéàüéàüéàüéàüéàüéàüéàüéàüéàüéà`);
  },

  logPlayersHit({ name, health, icon, damage}) {
    console.log(`–ò–≥—Ä–æ–∫ ${icon}${name} ü§úüí®(${damage}). –£ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –æ—Å—Ç–∞–ª–æ—Å—å %c${health}`, 'color: red;');
  },

  run() {
    // —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ–¥—Ö–æ–¥
    // this.fight();

    // –° –æ–∑–≤—É—á–∫–æ–π
    audio.play();
    setTimeout(() => {
      this.fight();
    }, 1200);
  },
}

// const firstPlayerCharacterName = prompt('–≤–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–µ—Ä–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞');
// const secondPlayerCharacterName = prompt('–≤–≤–µ–¥–∏—Ç–µ –∏–º—è –≤—Ç–æ—Ä–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞');

// const firstPlayer = playerFactory(firstPlayerCharacterName);
// const secondPlayer = playerFactory(firstPlayerCharacterName);
const firstPlayer = playerFactory('Motaro');
const secondPlayer = playerFactory('Subzero');

game.addFirstPlayer(firstPlayer);
game.addSecondPlayer(secondPlayer);
game.run();